{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAAO,CACXC,WAAYJ,EAAKE,cAAc,kBAC/BG,UAAWL,EAAKE,cAAc,iBAC9BI,YAAaN,EAAKE,cAAc,oBAuClC,SAASK,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,YAEpBA,MA7CPQ,EAAAnB,GAASoB,OAAOC,KAAK,CACnBX,SAAU,YACVY,kBAAmB,eAGrBpB,EAAKqB,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAEC,iBAIF,IAHA,IAAIC,EAAQC,OAAOtB,EAAKC,WAAWsB,OAC7BC,EAAOF,OAAOtB,EAAKE,UAAUqB,OAE1BE,EAAI,EAAGA,GAAKzB,EAAKG,YAAYoB,MAAOE,GAAK,EAAG,CACnD,KAAIA,GAAKzB,EAAKG,YAAYoB,OAiBxB,OAhBAnB,EAAcqB,EAAGJ,GACdK,MAAK,SAAAC,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MACjBQ,EAAAnB,GAASoB,OAAOa,QACd,uBAAwCC,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,UAIjDwB,OAAM,SAAAH,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MAClBQ,EAAAnB,GAASoB,OAAOgB,QACd,sBAAuCF,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,UAKnDe,GAASG,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst refs = {\n  inputDelay: form.querySelector('[name=\"delay\"]'),\n  inputStep: form.querySelector('[name=\"step\"]'),\n  inputAmount: form.querySelector('[name=\"amount\"]'),\n};\nlet i = 1;\n\nNotiflix.Notify.init({\n  position: 'right-top', // 'right-top' - 'right-bottom' - 'left-top' - 'left-bottom' - 'center-top' - 'center-bottom' - 'center-center'\n  cssAnimationStyle: 'from-right', // 'fade' - 'zoom' - 'from-right' - 'from-top' - 'from-bottom' - 'from-left'\n});\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  let delay = Number(refs.inputDelay.value);\n  const step = Number(refs.inputStep.value);\n\n  for (let i = 1; i <= refs.inputAmount.value; i += 1) {\n    if (i <= refs.inputAmount.value) {\n      createPromise(i, delay)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          );\n          // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          );\n          // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n\n      delay += step;\n    } else {\n      return;\n    }\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$refs","inputDelay","inputStep","inputAmount","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$parcel$interopDefault","Notify","init","cssAnimationStyle","addEventListener","e","preventDefault","delay1","Number","value","step","i1","then","param","success","concat","catch","failure"],"version":3,"file":"03-promises.a71e0570.js.map"}